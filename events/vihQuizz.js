const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const memberModel = require('../models/member.model');
const memberData = require('../models/member.model')

module.exports = {
    name : 'interactionCreate',
    async execute(interaction) {
        if (interaction.isSelectMenu()) {
            if(interaction.customId === 'select') {
                const selected = interaction.values[0];

                const memberModel = await memberData.findOne({ memberId: interaction.user.id });

                if (!memberModel) {
                    const newData = new memberData({ memberId: interaction.user.id });
                    newData.save();
                } else {
                    memberModel.vihGoodAwnsers = 0;
                    memberModel.save();
                }

                if (selected === 'first_option') {
                    const embed1 = new EmbedBuilder()
                        .setTitle('Question num√©ro 1Ô∏è‚É£')
                        .setDescription(`
                            Quel est l'autre nom du VIH ? \n
                            R√©ponse üü¢ : Vascularit√© infectionnaire humaine
                            R√©ponse üü° : Verticalit√© intra humaine
                            R√©ponse üî¥ : Virus de l‚Äôimmunod√©ficience humaine
                            R√©ponse üü£ : Venin invisible pour l'humain
                        `)
                        .setColor("DarkGold")
                    
                    const row1 = new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                                .setCustomId('vih_one_first_option')
                                .setStyle(ButtonStyle.Primary)
                                .setEmoji('üü¢'),
                            new ButtonBuilder()
                                .setCustomId('vih_one_second_option')
                                .setStyle(ButtonStyle.Primary)
                                .setEmoji('üü°'),
                            new ButtonBuilder()
                                .setCustomId('vih_one_third_option')
                                .setStyle(ButtonStyle.Primary)
                                .setEmoji('üî¥'),
                            new ButtonBuilder()
                                .setCustomId('vih_one_fourth_option')
                                .setStyle(ButtonStyle.Primary)
                                .setEmoji('üü£'),
                        )

                    await interaction.reply({ embeds: [embed1], components: [row1] });
                }
            }
        } else if (interaction.isButton()) {
            const memberModel = await memberData.findOne({ memberId: interaction.user.id });

            const embed2 = new EmbedBuilder()
                .setTitle('Question num√©ro 2Ô∏è‚É£')
                .setDescription(`
                    On ne peut pas √™tre contamin√©(e) par le VIH si : \n
                    R√©ponse üü¢ : Votre partenaire utilise un pr√©servatif lors d'un rapport sexuel
                    R√©ponse üü° : Votre partenaire se retire avant d‚Äô√©jaculer
                    R√©ponse üî¥ : Votre partenaire pratique seulement la sodomie sans pr√©servatif
                    R√©ponse üü£ : Votre partenaire se nettoie le sexe avant un rapport sexuel
                `)
                .setColor("DarkGold")
                
            const row2 = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('vih_two_first_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü¢'),
                    new ButtonBuilder()
                        .setCustomId('vih_two_second_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü°'),
                    new ButtonBuilder()
                        .setCustomId('vih_two_third_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üî¥'),
                    new ButtonBuilder()
                        .setCustomId('vih_two_fourth_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü£'),
                )

            const embed3 = new EmbedBuilder()
                .setTitle('Question num√©ro 3Ô∏è‚É£')
                .setDescription(`
                    Qu'engendre le VIH ? \n
                    R√©ponse üü¢ : Une perte de ses organes g√©nitaux
                    R√©ponse üü° : De mauvaises notes √† l'√©cole
                    R√©ponse üî¥ : 15 jours en prison
                    R√©ponse üü£ : Le sida
                `)
                .setColor("DarkGold")
            
            const row3 = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('vih_three_first_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü¢'),
                    new ButtonBuilder()
                        .setCustomId('vih_three_second_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü°'),
                    new ButtonBuilder()
                        .setCustomId('vih_three_third_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üî¥'),
                    new ButtonBuilder()
                        .setCustomId('vih_three_fourth_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü£'),
                )
            
            const embed4 = new EmbedBuilder()
                .setTitle('Question num√©ro 4Ô∏è‚É£')
                .setDescription(`
                    Quel est le symbole de la lutte contre le sida? \n
                    R√©ponse üü¢ : Un pr√©servatif trou√©
                    R√©ponse üü° : Un ruban rouge
                    R√©ponse üî¥ : Une seringue
                    R√©ponse üü£ : Un virus rouge
                `)
                .setColor("DarkGold")
            
            const row4 = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('vih_four_first_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü¢'),
                    new ButtonBuilder()
                        .setCustomId('vih_four_second_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü°'),
                    new ButtonBuilder()
                        .setCustomId('vih_four_third_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üî¥'),
                    new ButtonBuilder()
                        .setCustomId('vih_four_fourth_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü£'),
                )
            
            const embed5 = new EmbedBuilder()
                .setTitle('Question num√©ro 5Ô∏è‚É£')
                .setDescription(`
                    Comment se transmet le VIH? \n
                    R√©ponse üü¢ : Un baiser
                    R√©ponse üü° : Un c√¢lin
                    R√©ponse üî¥ : P√©n√©tration (anale ou vaginale)
                    R√©ponse üü£ : En crachant sur une personne
                `)
                .setColor("DarkGold")
            
            const row5 = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('vih_five_first_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü¢'),
                    new ButtonBuilder()
                        .setCustomId('vih_five_second_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü°'),
                    new ButtonBuilder()
                        .setCustomId('vih_five_third_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üî¥'),
                    new ButtonBuilder()
                        .setCustomId('vih_five_fourth_option')
                        .setStyle(ButtonStyle.Primary)
                        .setEmoji('üü£'),
                )
            
            const finalEmbedFail = new EmbedBuilder()
                .setTitle('Vous avez √©chou√© !')
                .setDescription(`
                    Vous n'avez pas eu 5 bonnes r√©ponses, vous avez donc √©chou√© !
                    Vous pouvez r√©assayer autant de fois que vous le souhaitez.
                `)
                .setColor("DarkRed")

            if(interaction.customId === 'vih_one_first_option')
            {
                await interaction.reply({ embeds: [embed2], components: [row2] });
            }
            else if(interaction.customId === 'vih_one_second_option')
            {
                await interaction.reply({ embeds: [embed2], components: [row2] });
            }
            else if(interaction.customId === 'vih_one_third_option')
            {
                memberModel.vihGoodAwnsers++;
                await memberModel.save();

                await interaction.reply({ embeds: [embed2], components: [row2] });
            }
            else if(interaction.customId === 'vih_one_fourth_option')
            {
                await interaction.reply({ embeds: [embed2], components: [row2] });
            }
            else if(interaction.customId === 'vih_two_first_option')
            {
                memberModel.vihGoodAwnsers++;
                memberModel.save();

                await interaction.reply({ embeds: [embed3], components: [row3] });
            }
            else if(interaction.customId === 'vih_two_second_option')
            {
                await interaction.reply({ embeds: [embed3], components: [row3] });
            }
            else if(interaction.customId === 'vih_two_third_option')
            {
                await interaction.reply({ embeds: [embed3], components: [row3] });
            }
            else if(interaction.customId === 'vih_two_fourth_option')
            {
                await interaction.reply({ embeds: [embed3], components: [row3] });
            }
            else if(interaction.customId === 'vih_three_first_option')
            {
                await interaction.reply({ embeds: [embed4], components: [row4] });
            }
            else if(interaction.customId === 'vih_three_second_option')
            {
                await interaction.reply({ embeds: [embed4], components: [row4] });
            }
            else if(interaction.customId === 'vih_three_third_option')
            {
                await interaction.reply({ embeds: [embed4], components: [row4] });
            }
            else if(interaction.customId === 'vih_three_fourth_option')
            {
                memberModel.vihGoodAwnsers++;
                await memberModel.save();

                await interaction.reply({ embeds: [embed4], components: [row4] });
            }
            else if(interaction.customId === 'vih_four_first_option')
            {
                await interaction.reply({ embeds: [embed5], components: [row5] });
            }
            else if(interaction.customId === 'vih_four_second_option')
            {
                memberModel.vihGoodAwnsers++;
                await memberModel.save();

                await interaction.reply({ embeds: [embed5], components: [row5] });
            }
            else if(interaction.customId === 'vih_four_third_option')
            {
                await interaction.reply({ embeds: [embed5], components: [row5] });
            }
            else if(interaction.customId === 'vih_four_fourth_option')
            {
                await interaction.reply({ embeds: [embed5], components: [row5] });
            }
            else if(interaction.customId === 'vih_five_first_option')
            {
                await interaction.reply({ embeds: [finalEmbedFail] });
            }
            else if(interaction.customId === 'vih_five_second_option')
            {
                await interaction.reply({ embeds: [finalEmbedFail] });
            }
            else if(interaction.customId === 'vih_five_third_option')
            {
                if (memberModel.vihGoodAwnsers === 4) {
                    if(memberModel.vihBadge === false) {
                        memberModel.vihBadge = true;
                        await memberModel.save();

                        const finalEmbedSuccess = new EmbedBuilder()
                            .setTitle('Vous avez r√©ussi !')
                            .setDescription(`
                                Vous avez eu 5 bonnes r√©ponses, vous avez donc r√©ussi !
                                Vous √™tes r√©compens√©s d'un badge, votre collection est visionnable sur le site.
                            `)
                            .setColor("DarkGreen")

                        await interaction.reply({ embeds: [finalEmbedSuccess] });
                    } else {
                        const finalEmbedSuccess = new EmbedBuilder()
                            .setTitle('Vous avez r√©ussi !')
                            .setDescription(`
                                Vous avez eu 5 bonnes r√©ponses, vous avez donc r√©ussi !
                                Vous avez d√©j√† re√ßu le badge correspondant, votre collection est visionnable sur le site.
                            `)
                            .setColor("DarkGreen")

                        await interaction.reply({ embeds: [finalEmbedSuccess] });
                    }
                } else {
                    await interaction.reply({ embeds: [finalEmbedFail] });
                }
            }
            else if(interaction.customId === 'vih_five_fourth_option')
            {
                await interaction.reply({ embeds: [finalEmbedFail] });
            }
        }
    }
}